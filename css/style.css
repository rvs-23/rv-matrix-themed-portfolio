/* ==========================================================================
   Global Variables and Default Theming (Green)
   ========================================================================== */
:root {
    /* Default Theme: Matrix Green (acts as fallback if no theme class or variable is overridden) */
    --primary-color: #0F0;
    --primary-color-rgb: 0, 255, 0;
    --secondary-color: #00FFFF;
    --background-color: #000; /* Global default background */
    --terminal-base-r: 17;
    --terminal-base-g: 24;
    --terminal-base-b: 39;
    --terminal-opacity: 0.88;
    --text-shadow-color: rgba(0, 255, 0, 0.7);
    --border-color: rgba(0, 255, 0, 0.6);
    --hover-color: #33FF33;
    --hover-shadow-color: rgba(51, 255, 51, 0.9);
    --scrollbar-track-color: rgba(0, 255, 0, 0.1);
    --scrollbar-thumb-color: rgba(0, 255, 0, 0.5);
    --scrollbar-thumb-hover-color: rgba(0, 255, 0, 0.8);
    --nav-icon-color: #0F0;
    --nav-icon-hover-color: #33FF33; /* Fallback if a theme doesn't set it */
    --nav-label-bg: rgba(0, 255, 0, 0.15);
    --loader-text-color: #0F0;
    --loader-spinner-color: #0F0;
    --matrix-rain-glow-color: #9FFF9F; /* Default glow for rain */

    /* Structural/Layout Variables (not theme-dependent) */
    --footer-height: 3.5rem;
    --font-stack-inter: 'Inter', sans-serif;
    --font-stack-fira: 'Fira Code', monospace;
    --font-mono-current: var(--font-stack-fira); /* Can be overridden by themes if needed, but usually global */
    --terminal-font-size: 12.5px; /* Can be overridden by themes or JS */
}

@font-face {
    font-family: "MatrixA";
    src: url("../assets/matrix.ttf") format("truetype");
}

@font-face {
    font-family: "MatrixB";
    src: url("../assets/matrix-resurrection.ttf") format("truetype");
}

/* --- THEME BLOCKS HAVE BEEN MOVED TO themes.css --- */

/* General Body Styling */
body {
    font-family: var(--font-stack-inter);
    background-color: var(--background-color); /* Uses theme-specific or default bg color */
    color: var(--primary-color); /* Uses theme-specific or default primary color */
    margin: 0;
    padding: 0 0 var(--footer-height) 0;
    box-sizing: border-box;
    height: 100vh;
    width: 100vw;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color 0.3s ease, background-color 0.3s ease; /* For body element transitions */
    overflow: hidden;
}

/* Loading Screen */
#loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000; /* Fallback, consider var(--background-color) if themes should affect it */
    z-index: 200;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: var(--loader-text-color); /* Uses themed loader text color */
    font-family: var(--font-mono-current);
    opacity: 1;
    transition: opacity 0.7s ease-out, visibility 0.7s ease-out;
    visibility: visible;
    text-align: center;
}

#loading-screen.hidden {
    opacity: 0;
    visibility: hidden;
}

.loading-content {
    padding: 1rem;
}

.loading-text {
    margin-bottom: 0.7rem;
    font-size: 0.9em;
    text-shadow: 0 0 7px var(--loader-text-color);
    letter-spacing: 1px;
}

.matrix-chars {
    font-size: 0.8em;
    word-break: break-all;
    max-width: 280px;
    margin: 0.8rem auto;
    line-height: 1.2;
    height: 4.8em;
    overflow: hidden;
}

.spinner {
    margin-top: 1.2rem;
    width: 35px;
    height: 35px;
    border: 3px solid rgba(0, 0, 0, 0.1); /* Consider theming this border base */
    border-left-color: var(--loader-spinner-color); /* Uses themed spinner color */
    border-radius: 50%;
    animation: spin 1s linear infinite;
    box-shadow: 0 0 8px var(--loader-spinner-color);
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* Canvas Layers */
#matrix-canvas {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 3; /* Ensure it's behind content but above body bg */
}

/* Content Container & Terminal */
@keyframes contentFadeInAppear { /* Renamed from original fadeIn to be specific for this use */
    from {
        opacity: 0;
        transform: translateY(20px) scale(0.98);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

.content-container {
    position: relative;
    z-index: 10;
    color: var(--primary-color);
    font-family: var(--font-mono-current);
    font-size: var(--terminal-font-size);
    text-shadow: 0 0 8px var(--text-shadow-color);
    /* Initial load animation - applied if JS doesn't override opacity immediately */
    /* animation: contentFadeInAppear 1.5s ease-out forwards; */ /* Can be removed if JS handles initial opacity */
    opacity: 1; /* Default shown state, JS might set to 0 then animate */
    padding: 1rem;
    width: 52vw;
    height: 42vh;
    max-width: 90vw;
    max-height: 90vh;
    background-color: rgba(var(--terminal-base-r), var(--terminal-base-g), var(--terminal-base-b), var(--terminal-opacity));
    border-radius: 0.5rem;
    box-shadow: 0 10px 25px -5px var(--text-shadow-color), 0 6px 10px -4px var(--text-shadow-color);
    border: 1px solid var(--border-color);
    box-sizing: border-box;
    overflow: hidden; /* Important for scrollbars within #terminal-output */
    display: flex;
    flex-direction: column;
    /* Default transitions for properties like color, shadow, size. Opacity/transform handled by specific classes. */
    transition: color 0.3s ease, text-shadow 0.3s ease, background-color 0.3s ease, 
                border-color 0.3s ease, box-shadow 0.3s ease, 
                width 0.3s ease, height 0.3s ease, font-size 0.3s ease;
}

/* General hidden state - applied by JS initially if needed, or for no-JS fallback */
.content-container.hidden {
    display: none !important; /* Ensures it's truly not taking space */
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
}

/* Class for immediate hiding via JavaScript */
.content-container.is-hidden-immediately {
    opacity: 0 !important;
    transform: scale(0.95) translateY(20px) !important;
    visibility: hidden !important;
    pointer-events: none !important;
    transition: none !important; /* No transition for immediate effect */
    display: none !important;
}

/* Class to trigger the fade-in animation when showing */
.content-container.is-appearing {
    display: flex !important; /* Ensure correct display type */
    visibility: visible !important;
    animation: contentFadeInAppear 0.4s ease-out forwards;
}


#terminal-output {
    flex-grow: 1;
    overflow-y: auto;
    white-space: pre-wrap;
    word-break: break-word;
    line-height: 1.4;
    padding-right: 8px; /* For scrollbar spacing */
    position: relative; /* For potential absolute positioned children if any */
}

#terminal-output > div { /* Spacing for output lines */
    margin-bottom: 0.5em;
}

.output-section {
    margin-bottom: 0.6em;
    padding-left: 0.5em;
    border-left: 2px solid var(--secondary-color);
}

.output-section-title {
    font-weight: bold;
    color: var(--primary-color);
    margin-bottom: 0.25em;
    display: flex;
    align-items: center;
}

.output-section-title i {
    margin-right: 0.5em;
    color: var(--secondary-color);
    font-size: 0.9em;
}

.output-line {
    margin-bottom: 0.15em; /* Reduced from 0.15 for tighter packing if needed */
    padding-left: 0.5em;
}

.output-line-label {
    font-weight: bold;
    color: var(--secondary-color);
    margin-right: 0.5em;
    display: inline-block;
    min-width: 70px; /* Ensures alignment */
}

.output-skills-category {
    margin-top: 0.2em;
    font-weight: bold;
    color: var(--primary-color);
}

.output-skills-list {
    padding-left: 1.5em;
    list-style-type: none; /* Custom markers used */
}

.output-skills-list li::before {
    content: "> ";
    color: var(--secondary-color);
    margin-right: 0.3em;
}

.prompt-line {
    margin-top: 0.8em;
    flex-shrink: 0;
    padding-bottom: 0.3em; /* Space below input */
    display: flex;
    align-items: center;
    border-top: 1px solid rgba(var(--primary-color-rgb), 0.15); /* Use themed RGB */
    padding-top: 0.6em; /* Space above input */
}

.prompt-arrow {
    color: var(--primary-color);
    transition: color 0.3s ease;
    margin-right: 0.6em;
    font-weight: bold;
    animation: blinkPrompt 1.5s infinite;
}

@keyframes blinkPrompt {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.69; }
}

#command-input {
    background-color: transparent !important;
    border: none !important;
    outline: none !important;
    color: var(--primary-color) !important;
    font-family: var(--font-mono-current) !important;
    font-size: 1em !important; /* Relative to parent .content-container */
    flex-grow: 1;
    caret-color: var(--primary-color);
    transition: color 0.3s ease, caret-color 0.3s ease;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    padding-right: 0.2em;
}

/* Scrollbar styling for terminal output */
#terminal-output::-webkit-scrollbar {
    width: 10px;
}

#terminal-output::-webkit-scrollbar-track {
    background: var(--scrollbar-track-color); /* Themed */
    border-radius: 10px;
}

#terminal-output::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb-color); /* Themed */
    border-radius: 10px;
    /* Border using terminal background color for "inset" look */
    border: 2px solid rgba(var(--terminal-base-r), var(--terminal-base-g), var(--terminal-base-b), var(--terminal-opacity));
}

#terminal-output::-webkit-scrollbar-thumb:hover {
    background: var(--scrollbar-thumb-hover-color); /* Themed */
}

/* Keyframes for initial fade-in of content (if used) */
/* @keyframes fadeIn was original name, changed to contentFadeInAppear above */


/* Icon hover effect */
@keyframes glitch-hover-effect {
    0%, 100% { transform: translateX(0) skewX(0); opacity: 1; text-shadow: 0 0 8px var(--hover-shadow-color); }
    20% { transform: translateX(-2px) skewX(-3deg); opacity: 0.85; text-shadow: 1px 0px var(--hover-shadow-color), -1px 0px var(--secondary-color); }
    40% { transform: translateX(2px) skewX(3deg); opacity: 1; }
    60% { transform: translateX(-1px) skewX(-2deg); opacity: 0.85; text-shadow: -1px 0px var(--hover-shadow-color), 1px 0px var(--secondary-color); }
    80% { transform: translateX(1px) skewX(2deg); opacity: 1; }
}

/* Links in terminal */
.content-container a,
#terminal-output a {
    color: var(--secondary-color);
    text-decoration: none; /* Or underline if preferred */
    transition: color 0.1s ease, text-shadow 0.1s ease, transform 0.1s ease;
    font-weight: bold;
    display: inline-block; /* Allows transform */
    position: relative;
    padding-bottom: 1px;
    border-bottom: 1px dashed transparent; /* Subtle underline effect on hover */
}

.content-container a:hover,
#terminal-output a:hover {
    color: var(--hover-color);
    animation: glitch-hover-effect 0.2s linear infinite; /* Faster, continuous */
    border-bottom-color: var(--hover-color);
    transform: translateY(-1px); /* Slight lift */
}

/* Output message styling */
.output-command {
    font-weight: 500; /* Or normal */
    opacity: 0.85;
}

.output-text { /* General text, inherits from .content-container */ }

.output-error {
    color: #FF4136; /* Standard error red, could be themed too */
    text-shadow: 0 0 6px rgba(255, 65, 54, 0.8);
    font-weight: bold;
}

.output-success {
    color: var(--secondary-color); /* Themed success color */
    text-shadow: 0 0 6px var(--secondary-color);
}

.output-text-small { /* For hints etc. */
    font-size: 0.9em;
    opacity: 0.8;
}

.ascii-name {
    display: block;
    color: var(--primary-color);
    text-shadow: 0 0 9px var(--text-shadow-color);
    margin-bottom: 0.8em;
    font-size: 1.15em;
    font-weight: bold;
    text-align: center;
    letter-spacing: 1.5px;
}

/* Minimal Navigation Bar */
.minimal-nav {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: transparent; /* Let body background show through */
    padding: 0.5rem 0.8rem;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1.3rem;
    z-index: 150;
    transition: opacity 0.4s ease, transform 0.4s ease; /* For hiding with terminal */
}

/* Hides nav when terminal is hidden via JS adding class to body */
body.terminal-hidden .minimal-nav {
    opacity: 0 !important; /* Ensure it hides */
    transform: translateY(100%) !important;
    pointer-events: none !important;
}

.nav-icon {
    color: var(--nav-icon-color); /* Themed */
    font-size: 1.2rem;
    text-decoration: none;
    position: relative; /* For label positioning */
    transition: color 0.1s ease, transform 0.1s ease;
    display: inline-block;
    padding: 0.2em;
}

.nav-icon:hover {
    color: var(--nav-icon-hover-color); /* Themed */
    animation: glitch-hover-effect 0.2s linear infinite; /* Faster, continuous */
}

.nav-label {
    position: absolute;
    bottom: 125%;
    left: 50%;
    transform: translateX(-50%);
    background-color: var(--nav-label-bg); /* Themed */
    color: var(--nav-icon-hover-color); /* Match icon hover color */
    padding: 0.25rem 0.5rem;
    border-radius: 3px;
    font-size: 0.65rem;
    font-family: var(--font-mono-current);
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s ease, visibility 0.2s ease, bottom 0.2s ease, color 0.3s ease, background-color 0.3s ease;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);
}

.nav-icon:hover .nav-label {
    opacity: 1;
    visibility: visible;
    bottom: 135%; /* Pop up a bit more */
}

/* Terminal Glitch Overlay (for easter egg) */
.terminal-glitch-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(var(--terminal-base-r), var(--terminal-base-g), var(--terminal-base-b), var(--terminal-opacity)); /* Match terminal bg */
    color: var(--primary-color);
    font-family: var(--font-mono-current); /* Match terminal font */
    font-size: inherit; /* Match terminal font size */
    line-height: inherit; /* Match terminal line height */
    overflow: hidden;
    z-index: 500; /* Above terminal content */
    white-space: pre-wrap;
    word-break: break-all;
    opacity: 0.95; /* Slightly transparent */
    padding: inherit; /* Match terminal padding if any on the main container */
    box-sizing: border-box;
}

/* CRT Mode Styling */
body.crt-mode {
    animation: crt-flicker 0.15s infinite, crt-scanline 5s linear infinite;
    filter: contrast(1.15) brightness(0.95) sepia(0.2) hue-rotate(-15deg) blur(0.3px);
    position: relative; /* Needed for ::before pseudo-element */
    overflow: hidden; /* Prevent scrollbars from filter/scanline effects */
}

body.crt-mode::before { /* Scanline overlay */
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: linear-gradient(to bottom, rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 51%);
    background-size: 100% 4px; /* Scanline height */
    z-index: 250; /* Above canvas, below terminal content */
    pointer-events: none;
    opacity: 0.5;
}

body.crt-mode #contentContainer,
body.crt-mode .minimal-nav {
    /* Enhance text shadow for CRT glow */
    text-shadow: 0 0 7px var(--primary-color), 0 0 12px var(--primary-color);
}

body.crt-mode #matrix-canvas {
    /* Mute canvas slightly in CRT mode */
    filter: saturate(0.7) brightness(0.8);
}

@keyframes crt-flicker {
    0%, 100% { opacity: 1; }
    48% { opacity: 0.95; }
    50% { opacity: 0.93; }
    52% { opacity: 0.95; }
}

@keyframes crt-scanline {
    0% { background-position-y: 0; }
    100% { background-position-y: -200px; } /* Animates scanlines moving up */
}

/* Responsive Adjustments */
@media (max-width: 767px) {
    .content-container {
        width: 90vw;
        /* Adjust max-height carefully to avoid overflow with virtual keyboards */
        max-height: calc(100vh - var(--footer-height) - 2rem); /* Extra space from top/bottom */
        height: 65vh; /* Or make it more dynamic */
        padding: 0.8rem;
    }

    #terminal-output {
        line-height: 1.3;
    }

    .ascii-name {
        font-size: 1em; /* Smaller on mobile */
    }

    .minimal-nav {
        padding: 0.4rem 0.5rem;
        gap: 1rem; /* Slightly less gap */
    }

    .nav-icon {
        font-size: 1.1rem;
    }

    :root { /* Adjust root variables for mobile if needed, e.g., footer height */
        --footer-height: 3.2rem;
    }

    .prompt-line {
        padding-top: 0.4em;
    }

    .output-line-label {
        min-width: 60px;
    }
}

@media (min-width: 768px) and (max-width: 1023px) { /* Tablet */
    .content-container {
        width: 75vw; /* Slightly larger than original for tablets */
        height: 55vh;
        padding: 0.9rem;
    }

    .minimal-nav {
        gap: 1.2rem;
    }
}